name: CI

on:
  push:
    branches: ["develop"]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      # 1. checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. create docker network for DNS support 
      - name: Creating docker network
        run: docker network create git-network


      # 3. starting mysql
      - name: Start mysql container
        run: |
          docker run -d \
          --name mysql-service \
          --network git-network \
          -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
          -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
          -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
          asafnr567/mysql-db:3.0

      - name: Waiting mysql
        run: |
          MAX_RETRIES=15  
          COUNT=0
              
          until docker exec mysql-service mysqladmin ping -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} --silent; do
            echo "Waiting for mysql..."
            sleep 2
            COUNT=$((COUNT + 1))
            if [ $COUNT -eq $MAX_RETRIES ]; then
              echo "Tried to connect to mysql $COUNT times, exiting..."
              exit 1
            fi
          done
          echo "mysql is ready"
          


      # 4. starting flask
      - name: Starting flask container
        run: |
          docker run -d \
          --name flask-service \
          --network git-network \
          -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
          -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
          -e DB_HOST: mysql-service \
          -e DB_PORT: 3306 \
          -e CARS_DB: knowCarsDB \
          asafnr567/flask-api:2.1


      # 5. startubg nginx
      - name: Starting nginx container
        run: |
          docker run -d \
          --name nginx-service
          --network git-network
          -p 80:80
          asafnr567/nginx-srv:1.1




      # 6. waiting for 
      
        
        
      
