
services:
  mysql-db:
    image: asafnr567/mysql-db:2.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [
        "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-net



  flask-api:
    image: asafnr567/flask-api:2.0
    container_name: flask-api
    environment:
      DB_HOST: ${DB_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      CARS_DB: ${CARS_DB}
      DB_PORT: ${DB_PORT}
    depends_on:
      mysql-db:
        condition: service_healthy
    volumes:
      - ./backend-API-container/images:/backend-API-container/images
    ports:
      - "5000:5000"
    healthcheck:
      test: [
        "CMD", "curl", "-f", "http://localhost:5000/api/health"
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    restart: on-failure
    networks:
      - backend-net
      - frontend-net
      
  nginx:
    image: asafnr567/nginx-srv
    container_name: nginx-srv
    depends_on:
      flask-api:
        condition: service_healthy
    ports:
      - "8080:80"
    restart: on-failure
    networks:
      - frontend-net
      
volumes:
  db-data:

networks:
  backend-net: {}
  frontend-net: {}
